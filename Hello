## Инструкция для работы с Git и удалёнными репозиториями
#### Что такое Git?


1. Подготовка репозитория
>Для создание репозитория необходимо выполнить команду <span style="color:red">*git init*</span>  в папке с репозиторием и у Вас создаться репозиторий (появится скрытая папка .git)

Для добавления измений в коммит используется команда *git add*. Чтобы использовать команду *git add* напишите <span style="color:green">*git add <имя файла>*</s>

2. Просмотр состояния репозитория

>Для того, чтобы посмотреть состояние репозитория используется команда *git status*. Для этого необходимо в папке с репозиторием написать <span style="color:cyan">*git status*</span>, и Вы увидите были ли измения в файлах, или их не было.

3. Создание коммитов

Для того, чтобы создать коммит(сохранение) необходимо выполнить команду *git commit*. Выполняется она так: <span style="color:cyan">*git commit -m "<сообщение к коммиту>*</span>. Все файлы для коммита должны быть ***ДОБАВЛЕНЫ*** и сообщение к коммиту писать ***ОБЯЗАТЕЛЬНО***.

4. Перемещение между сохранениями

*git checkout*. 

5. Журнал изменений

 *git log*. 
## [Ветки в Git](https://git-scm.com/book/ru/v2/Ветвление-в-Git-О-ветвлении-в-двух-словах)

* Создание ветки

*git branch*. 

* Слияние веток  *git merge*

* Удаление веток git branch -d <название ветки>
***
## Добавление картинок
![кот](https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSf__Eg-DvubtYMQnm8s7tdTVlEt1l7AN6o10gpVOyHcg&s)


## Добавление ссылок
[Работа с Markdown](https://lifehacker.ru/chto-takoe-markdown/)
[И еще](https://paulradzkov.com/2014/markdown_cheatsheet/)
## Добавление  цитаты
Работа с цитатами заполняется через знак ">"
>«Чем умнее человек, тем легче он признает себя дураком». ...
>>«Никогда не ошибается тот, кто ничего не делает». ...
>***«Мода проходит, стиль остаётся».***

## *Оформление списков*

### Форматирование текста


### git pull
Эта команда позволяет скачать все из текущего репозитория и автоматически сделать merge с нашей версией

### git push
При первом её использовании нужна авторизация.
Эта команда позволяет отправить нашу версию репозитория на внешний репозиторий. ТРЕБУЕТ АВТОРИЗАЦИИ на внешнем репозитории.

Как настроить совместную работу

1. Создать аккаунт на GitHub.com
2. Создать локальный репозиторий
3. “Подружить” ваш локальный и удалённый репозитории. 
    

4. **Отправить (push)** 
5. Провести изменения “с удаленного репозитория”
6. **Выкачать (pull)** 

*pull request*

- команда для предложения изменений 
- запрос на вливание изменений в репозиторий


